{
	"info": {
		"_postman_id": "634529aa-2515-4238-9029-3ee542673d37",
		"name": "BENEFICIÁRIOS - Consulta vários",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "BENEFICIÁRIOS - Consulta vários",
			"item": [
				{
					"name": "Request sem OAuth Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "57de0c54-1521-46e5-89b4-a91ee741fd8f",
								"exec": [
									"postman.setGlobalVariable(\"profile\", \"prod\"); // \"dev\" or \"prod\"\r",
									"\r",
									"if (pm.variables.get(\"profile\") == \"dev\") {\r",
									"  postman.setGlobalVariable(\"url\", \"localhost\");\r",
									"  postman.setGlobalVariable(\"context\", \"/sdcobr\");\r",
									"  postman.setGlobalVariable(\"port\", \":8080\");\r",
									"  postman.setGlobalVariable(\"clientId\", \"admio\");\r",
									"  postman.setGlobalVariable(\"secret\", \"admio\");\r",
									"} else {\r",
									"  postman.setGlobalVariable(\"url\", \"172.17.0.2\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"context\", \"\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"port\", \":8080\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"clientId\", \"TSTCOB\");\r",
									"  postman.setGlobalVariable(\"secret\", \"TST\");\r",
									"}\r",
									"\r",
									"function idempotencyIdRandom() {\r",
									"  var n = Math.floor(Math.random() * 9999999);\r",
									"\r",
									"  while (n == postman.getGlobalVariable(\"idempotencyId\")) {\r",
									"\r",
									"    n = Math.floor(Math.random() * 9999999);\r",
									"  }\r",
									"\r",
									"  return n;\r",
									"}\r",
									"\r",
									"postman.setGlobalVariable(\"idempotencyId\", idempotencyIdRandom());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "a7f6a1cf-7e4d-45c8-94b1-6753da26806a",
								"exec": [
									"pm.test(\"Status code is 401 Unauthorized\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableCookies": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Idempotency-id",
								"value": "{{idempotencyId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}{{port}}{{context}}/api/v1/beneficiarios",
							"protocol": "http",
							"host": [
								"{{url}}{{port}}{{context}}"
							],
							"path": [
								"api",
								"v1",
								"beneficiarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Requisitando OAuth",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "d19e6e4c-1db7-44a6-ac39-ddad16c48b16",
								"exec": [
									"var response = JSON.parse(responseBody);\r",
									"postman.setGlobalVariable(\"token\"  ,\"Bearer \" + response.access_token);\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{clientId}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://{{url}}{{port}}{{context}}/api/oauth/token?grant_type=client_credentials",
							"protocol": "http",
							"host": [
								"{{url}}{{port}}{{context}}"
							],
							"path": [
								"api",
								"oauth",
								"token"
							],
							"query": [
								{
									"key": "grant_type",
									"value": "client_credentials"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Inserindo beneficiário para consultar com dados específicos",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "7b6b8b8c-80d7-4611-969b-132991d68cf7",
								"exec": [
									"function idempotencyIdRandom() {\r",
									"  var n = Math.floor(Math.random() * 9999999);\r",
									"\r",
									"  while (n == postman.getGlobalVariable(\"idempotencyId\")) {\r",
									"\r",
									"    n = Math.floor(Math.random() * 9999999);\r",
									"  }\r",
									"\r",
									"  return n;\r",
									"}\r",
									"\r",
									"postman.setGlobalVariable(\"idempotencyId\", idempotencyIdRandom());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "1ca838a7-1c93-4038-abcc-176752ff09fa",
								"exec": [
									"pm.test(\"Status code is 201 Created\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Idempotency-id",
								"value": "{{idempotencyId}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"idBeneficiario\": 4,\r\n  \"cpfCnpjBeneficiario\": \"17300036805\",\r\n  \"tipoPessoaBeneficiario\": \"F\",\r\n  \"idGerente\": 2,\r\n  \"cpfCnpjGerente\": \"72352205387\",\r\n  \"tipoPessoaGerente\": \"F\",\r\n  \"email\": \"jessica.luz@matera.com\",\r\n  \"regraTituloDuplicado\": 1,\r\n  \"acaoCreditoBeneficiarioInapto\": 1,\r\n  \"arquivoCnab\": {\r\n    \"tipoLayout\": 0,\r\n    \"agenciaConvencaoNome\": 1,\r\n    \"contaConvencaoNome\": 201359,\r\n    \"confereSequencialRemessa\": false,\r\n    \"sequencialRemessa\": 0,\r\n    \"sequencialRetorno\": 0,\r\n    \"formaGeracaoRetorno\": \"U\",\r\n    \"notificacaoBaixaOperacional\": \"N\",\r\n    \"tipoQuebraArquivoRetorno\": \"1\",\r\n    \"usaGeracaoManual\": false,\r\n    \"usaGeracaoDiretorioBeneficiario\": false,\r\n    \"usaGeracaoConvencaoNome\": false,\r\n    \"mascaraArqUnicoConvencaoNome\": \"[agencia][conta][full]\",\r\n    \"mascaraArqParcialConvencaoNome\": \"[agencia][conta][part]\"\r\n  },\r\n  \"mensagens\": [\r\n    {\r\n      \"codigo\": \"01\",\r\n      \"ordem\": 0\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://{{url}}{{port}}{{context}}/api/v1/beneficiarios",
							"protocol": "http",
							"host": [
								"{{url}}{{port}}{{context}}"
							],
							"path": [
								"api",
								"v1",
								"beneficiarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultando beneficiário somente com tipo pessoa",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "df763729-3210-44b3-9a64-304dc699959b",
								"exec": [
									"postman.setGlobalVariable(\"profile\", \"dev\"); // \"dev\" or \"prod\"\r",
									"\r",
									"if (pm.variables.get(\"profile\") == \"dev\") {\r",
									"  postman.setGlobalVariable(\"url\", \"localhost\");\r",
									"  postman.setGlobalVariable(\"context\", \"/sdcobr\");\r",
									"  postman.setGlobalVariable(\"port\", \":8080\");\r",
									"  postman.setGlobalVariable(\"clientId\", \"admio\");\r",
									"  postman.setGlobalVariable(\"secret\", \"admio\");\r",
									"} else {\r",
									"  postman.setGlobalVariable(\"url\", \"172.17.0.1\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"context\", \"\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"port\", \":8080\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"clientId\", \"TSTCOB\");\r",
									"  postman.setGlobalVariable(\"secret\", \"TST\");\r",
									"}\r",
									"\r",
									"function idempotencyIdRandom() {\r",
									"  var n = Math.floor(Math.random() * 9999999);\r",
									"\r",
									"  while (n == postman.getGlobalVariable(\"idempotencyId\")) {\r",
									"\r",
									"    n = Math.floor(Math.random() * 9999999);\r",
									"  }\r",
									"\r",
									"  return n;\r",
									"}\r",
									"\r",
									"postman.setGlobalVariable(\"idempotencyId\", idempotencyIdRandom());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bad22bbe-ceef-49a2-aae9-dc1aef93f689",
								"exec": [
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Check error response values\", function () {\r",
									"    pm.expect(response.error[0].code).is.to.equal(\"COB-10000\");\r",
									"    pm.expect(response.error[0].message).is.to.equal(\"Para consulta de beneficiários por tipoPessoa/cpfCnpj, ambos os parâmetros devem ser informados.\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Idempotency-id",
								"type": "text",
								"value": "{{idempotencyId}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "http://{{url}}{{port}}{{context}}/api/v1/beneficiarios?tipoPessoa=F",
							"protocol": "http",
							"host": [
								"{{url}}{{port}}{{context}}"
							],
							"path": [
								"api",
								"v1",
								"beneficiarios"
							],
							"query": [
								{
									"key": "tipoPessoa",
									"value": "F"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultando beneficiário com tipoPessoa fora do domínio",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "17fd29c9-fdd4-4a55-8e1c-296d87fb1632",
								"exec": [
									"postman.setGlobalVariable(\"profile\", \"dev\"); // \"dev\" or \"prod\"\r",
									"\r",
									"if (pm.variables.get(\"profile\") == \"dev\") {\r",
									"  postman.setGlobalVariable(\"url\", \"localhost\");\r",
									"  postman.setGlobalVariable(\"context\", \"/sdcobr\");\r",
									"  postman.setGlobalVariable(\"port\", \":8080\");\r",
									"  postman.setGlobalVariable(\"clientId\", \"admio\");\r",
									"  postman.setGlobalVariable(\"secret\", \"admio\");\r",
									"} else {\r",
									"  postman.setGlobalVariable(\"url\", \"172.17.0.1\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"context\", \"\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"port\", \":8080\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"clientId\", \"TSTCOB\");\r",
									"  postman.setGlobalVariable(\"secret\", \"TST\");\r",
									"}\r",
									"\r",
									"function idempotencyIdRandom() {\r",
									"  var n = Math.floor(Math.random() * 9999999);\r",
									"\r",
									"  while (n == postman.getGlobalVariable(\"idempotencyId\")) {\r",
									"\r",
									"    n = Math.floor(Math.random() * 9999999);\r",
									"  }\r",
									"\r",
									"  return n;\r",
									"}\r",
									"\r",
									"postman.setGlobalVariable(\"idempotencyId\", idempotencyIdRandom());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "20d23200-f534-435f-8240-ab253ec630ed",
								"exec": [
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Check error response values\", function () {\r",
									"    pm.expect(response.error[0].code).is.to.equal(\"COB-2559\");\r",
									"    pm.expect(response.error[0].message).is.to.equal(\"Valores permitidos para tipoPessoa: [F] Física ou [J] Jurídica. Valor enviado: 'F'\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Idempotency-id",
								"type": "text",
								"value": "{{idempotencyId}}"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}{{port}}{{context}}/api/v1/beneficiarios?tipoPessoa='F'",
							"protocol": "http",
							"host": [
								"{{url}}{{port}}{{context}}"
							],
							"path": [
								"api",
								"v1",
								"beneficiarios"
							],
							"query": [
								{
									"key": "tipoPessoa",
									"value": "'F'"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultando beneficiário somente com agencia",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "8cb57bd7-27a4-4470-860d-437c96a626c1",
								"exec": [
									"postman.setGlobalVariable(\"profile\", \"dev\"); // \"dev\" or \"prod\"\r",
									"\r",
									"if (pm.variables.get(\"profile\") == \"dev\") {\r",
									"  postman.setGlobalVariable(\"url\", \"localhost\");\r",
									"  postman.setGlobalVariable(\"context\", \"/sdcobr\");\r",
									"  postman.setGlobalVariable(\"port\", \":8080\");\r",
									"  postman.setGlobalVariable(\"clientId\", \"admio\");\r",
									"  postman.setGlobalVariable(\"secret\", \"admio\");\r",
									"} else {\r",
									"  postman.setGlobalVariable(\"url\", \"172.17.0.1\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"context\", \"\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"port\", \":8080\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"clientId\", \"TSTCOB\");\r",
									"  postman.setGlobalVariable(\"secret\", \"TST\");\r",
									"}\r",
									"\r",
									"function idempotencyIdRandom() {\r",
									"  var n = Math.floor(Math.random() * 9999999);\r",
									"\r",
									"  while (n == postman.getGlobalVariable(\"idempotencyId\")) {\r",
									"\r",
									"    n = Math.floor(Math.random() * 9999999);\r",
									"  }\r",
									"\r",
									"  return n;\r",
									"}\r",
									"\r",
									"postman.setGlobalVariable(\"idempotencyId\", idempotencyIdRandom());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "123d7009-8e5e-4132-ad6b-4d059468436a",
								"exec": [
									"pm.test(\"Status code is 400 Bad Request\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"var response = JSON.parse(responseBody);\r",
									"\r",
									"pm.test(\"Check error response values\", function () {\r",
									"    pm.expect(response.error[0].code).is.to.equal(\"COB-2583\");\r",
									"    pm.expect(response.error[0].message).is.to.equal(\"Para consulta de beneficiários por agencia/conta, ambos os parâmetros devem ser informado\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Idempotency-id",
								"type": "text",
								"value": "{{idempotencyId}}"
							},
							{
								"key": "Authorization",
								"type": "text",
								"value": "{{token}}"
							}
						],
						"url": {
							"raw": "http://{{url}}{{port}}{{context}}/api/v1/beneficiarios?agencia=1",
							"protocol": "http",
							"host": [
								"{{url}}{{port}}{{context}}"
							],
							"path": [
								"api",
								"v1",
								"beneficiarios"
							],
							"query": [
								{
									"key": "agencia",
									"value": "1"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Consultando todos os beneficiários",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "0d33660a-7fc2-40f7-875c-29af9e66752e",
								"exec": [
									"postman.setGlobalVariable(\"profile\", \"dev\"); // \"dev\" or \"prod\"\r",
									"\r",
									"if (pm.variables.get(\"profile\") == \"dev\") {\r",
									"  postman.setGlobalVariable(\"url\", \"localhost\");\r",
									"  postman.setGlobalVariable(\"context\", \"/sdcobr\");\r",
									"  postman.setGlobalVariable(\"port\", \":8080\");\r",
									"  postman.setGlobalVariable(\"clientId\", \"admio\");\r",
									"  postman.setGlobalVariable(\"secret\", \"admio\");\r",
									"} else {\r",
									"  postman.setGlobalVariable(\"url\", \"172.17.0.1\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"context\", \"\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"port\", \":8080\"); // NÃO MEXER!!\r",
									"  postman.setGlobalVariable(\"clientId\", \"TSTCOB\");\r",
									"  postman.setGlobalVariable(\"secret\", \"TST\");\r",
									"}\r",
									"\r",
									"function idempotencyIdRandom() {\r",
									"  var n = Math.floor(Math.random() * 9999999);\r",
									"\r",
									"  while (n == postman.getGlobalVariable(\"idempotencyId\")) {\r",
									"\r",
									"    n = Math.floor(Math.random() * 9999999);\r",
									"  }\r",
									"\r",
									"  return n;\r",
									"}\r",
									"\r",
									"postman.setGlobalVariable(\"idempotencyId\", idempotencyIdRandom());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "931f2a22-ba44-4f57-9779-d820f3cc4d2c",
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Idempotency-id",
								"type": "text",
								"value": "{{idempotencyId}}"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}{{port}}{{context}}/api/v1/beneficiarios",
							"protocol": "http",
							"host": [
								"{{url}}{{port}}{{context}}"
							],
							"path": [
								"api",
								"v1",
								"beneficiarios"
							]
						}
					},
					"response": []
				},
				{
					"name": "Removendo beneficiário inserido anteriormente",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "79eac288-488e-4d32-9408-00b1ae20ebff",
								"exec": [
									"pm.test(\"Status code is 200 OK\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							},
							{
								"key": "Idempotency-id",
								"value": "{{idempotencyId}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://{{url}}{{port}}{{context}}/api/v1/beneficiarios/4",
							"protocol": "http",
							"host": [
								"{{url}}{{port}}{{context}}"
							],
							"path": [
								"api",
								"v1",
								"beneficiarios",
								"4"
							]
						}
					},
					"response": []
				}
			],
			"protocolProfileBehavior": {}
		}
	],
	"protocolProfileBehavior": {}
}